from .. import loader, utils
import subprocess
import os

@loader.tds
class DanteSetupMod(loader.Module):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Dante SOCKS5-–ø—Ä–æ–∫—Å–∏"""

    strings = {"name": "DanteSetup"}

    async def client_ready(self, client, db):
        self._client = client

    async def dantecmd(self, message):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç SOCKS5-–ø—Ä–æ–∫—Å–∏ (Dante) –Ω–∞ 45.67.215.203:80"""
        await utils.answer(message, "üîß –ü—Ä–æ–≤–µ—Ä—è—é —Å–∏—Å—Ç–µ–º—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Dante SOCKS5-–ø—Ä–æ–∫—Å–∏...")

        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Dante
            dante_installed = subprocess.run("dpkg -l | grep dante-server", shell=True, stdout=subprocess.PIPE).stdout.decode()
            if "dante-server" in dante_installed:
                await utils.answer(message, "‚úÖ Dante —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é...")
            else:
                # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Dante
                subprocess.run("sudo apt update && sudo apt install dante-server -y", shell=True, check=True)

            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Dante
            dante_config = """
logoutput: syslog
internal: 45.67.215.203 port = 80
external: 45.67.215.203
socksmethod: none

user.privileged: root
user.unprivileged: nobody

client pass {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    log: connect disconnect
}

socks pass {
    from: 0.0.0.0/0 to: 0.0.0.0/0
    log: connect disconnect
}
"""
            # –ó–∞–ø–∏—Å—å –∫–æ–Ω—Ñ–∏–≥–∞
            with open("/etc/danted.conf", "w") as conf_file:
                conf_file.write(dante_config)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞ –≤ UFW, –µ—Å–ª–∏ –æ–Ω –≤–∫–ª—é—á–µ–Ω
            ufw_status = subprocess.run("sudo ufw status", shell=True, stdout=subprocess.PIPE).stdout.decode()
            if "active" in ufw_status:
                subprocess.run("sudo ufw allow 80/tcp", shell=True)

            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Dante
            subprocess.run("sudo systemctl restart danted", shell=True, check=True)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
            dante_status = subprocess.run("sudo systemctl is-active danted", shell=True, stdout=subprocess.PIPE).stdout.decode().strip()
            if dante_status != "active":
                raise Exception("Dante –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è. –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏: `sudo journalctl -u danted --no-pager`")

            await utils.answer(message, f"‚úÖ –ü—Ä–æ–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!\n\n"
                                        f"üîπ **–¢–∏–ø:** SOCKS5\n"
                                        f"üåç **IP:** `45.67.215.203`\n"
                                        f"üî¢ **–ü–æ—Ä—Ç:** `80`\n\n"
                                        f"üìå –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –≤ Telegram!")

        except subprocess.CalledProcessError as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        except Exception as e:
            await utils.answer(message, f"‚ùå –û—à–∏–±–∫–∞: {e}")
