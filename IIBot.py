import random
from telethon import types
from .. import loader, utils


@loader.tds
class iibotMod(loader.Module):
    """–ë–æ—Ç-–¥—É—Ä–∞—á–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ"""

    strings = {
        "name": "IIBot",
        "enabled": "‚úÖ –†–µ–∂–∏–º –¥—É—Ä–∞–∫–∞ –≤–∫–ª—é—á—ë–Ω!",
        "disabled": "‚ùå –†–µ–∂–∏–º –¥—É—Ä–∞–∫–∞ –æ—Ç–∫–ª—é—á—ë–Ω.",
        "chance_set": "üé≤ –®–∞–Ω—Å –æ—Ç–≤–µ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ 1 –∫ {}",
        "need_arg": "‚ö† –ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ!",
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            "blacklist", [], "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç",
            "generate_text", True, "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        )
        self.active_chats = set()
        self.reply_chance = 0

    async def iicmd(self, m: types.Message):
        if not m.chat:
            return

        chat_id = m.chat.id
        args = utils.get_args_raw(m).lower()

        if args in {"on", "–≤–∫–ª", "enable"}:
            self.active_chats.add(chat_id)
            return await utils.answer(m, self.strings["enabled"])

        if args in {"off", "–≤—ã–∫–ª", "disable"}:
            self.active_chats.discard(chat_id)
            return await utils.answer(m, self.strings["disabled"])

        return await utils.answer(m, self.strings["need_arg"])

    async def randomicmd(self, m: types.Message):
        args = utils.get_args_raw(m)

        if args.isdigit():
            self.reply_chance = int(args)
            return await utils.answer(m, self.strings["chance_set"].format(args))

        return await utils.answer(m, self.strings["need_arg"])

    async def watcher(self, m: types.Message):
        if not isinstance(m, types.Message) or not m.chat:
            return

        chat_id, user_id = m.chat.id, m.sender_id

        if chat_id not in self.active_chats or user_id == (await m.client.get_me()).id or user_id in self.config["blacklist"]:
            return

        if self.reply_chance and random.randint(0, self.reply_chance) != 0:
            return

        words = [word for word in m.raw_text.split() if len(word) >= 3]
        if not words:
            return

        search_word = random.choice(words)
        messages = [
            msg async for msg in m.client.iter_messages(chat_id, search=search_word)
            if msg.replies and msg.replies.max_id
        ]

        if messages:
            base_message = random.choice(messages)
            reply_msgs = [
                msg async for msg in m.client.iter_messages(
                    chat_id,
                    ids=list(range(base_message.id + 1, base_message.replies.max_id + 1))
                )
                if msg.reply_to and msg.reply_to.reply_to_msg_id == base_message.id
            ]
            if reply_msgs:
                return await m.reply(random.choice(reply_msgs))

        if self.config["generate_text"]:
            return await m.reply(self.generate_random_response())

    def generate_random_response(self):
        phrases = [
            "–•–º... –¥–∞–∂–µ –Ω–µ –∑–Ω–∞—é ü§î",
            "–ê —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª —É—Å–ª—ã—à–∞—Ç—å?",
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ê —Ç—ã –∫–∞–∫ –¥—É–º–∞–µ—à—å?",
            "–ú–æ–∂–µ—Ç –±—ã—Ç—å... –∞ –º–æ–∂–µ—Ç –∏ –Ω–µ—Ç üòè",
            "–≠—Ç–æ —Å–ª–∏—à–∫–æ–º —Å–ª–æ–∂–Ω–æ –¥–ª—è –º–µ–Ω—è...",
            "–ü–æ–∂–∞–ª—É–π, –ø—Ä–æ–º–æ–ª—á—É ü§ê",
            "–Ø —Ö–µ–∑, –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–π –º–µ–Ω—è —Ç–∞–∫–æ–µ üòÇ",
            "–ú–º–º... –Ω–∞ —ç—Ç–æ —É –º–µ–Ω—è –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞...",
            "–Ø –Ω–µ —É–≤–µ—Ä–µ–Ω, –Ω–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ... –Ω–µ—Ç üòÖ",
            "–≠—Ç–æ —Å–ª–∏—à–∫–æ–º —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –º–µ–Ω—è üò∂"
        ]
        return random.choice(phrases)

    def get_blacklist(self):
        return self.config["blacklist"]

    def add_to_blacklist(self, user_id):
        if user_id not in self.config["blacklist"]:
            self.config["blacklist"].append(user_id)
            return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫."
        return "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ."

    def remove_from_blacklist(self, user_id):
        if user_id in self.config["blacklist"]:
            self.config["blacklist"].remove(user_id)
            return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} —É–¥–∞–ª—ë–Ω –∏–∑ —á—ë—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞."
        return "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ."
