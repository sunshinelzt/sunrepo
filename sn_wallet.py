#meta developer @sunshinelzt

from .. import loader

@loader.tds
class GreetingModule(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–æ–≤, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ–∏–≥."""
    strings = {
        "name": "sn_wallet",
        "config_wallet": "–¢–≤–æ–π TON-–∞–¥—Ä–µ—Å",
        "config_crypto_link": "–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—á–µ—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ @CryptoBot",
        "config_xrocket_link": "–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—á–µ—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ @tonRocketBot",
        "error_missing_config": "–û—à–∏–±–∫–∞: –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É `.cfg yg_wallet` –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.",
        "error_sending_message": "–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.",
        "welcome_message": (
            "<emoji document_id=5472055112702629499>üëã</emoji> <b>–ü—Ä–∏–≤–µ—Ç!</b>\n\n"
            "<emoji document_id=5471952986970267163>üíé</emoji> <i>–ú–æ–π –±–∞–ª–∞–Ω—Å –ª–µ–≥–∫–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å –ø–æ–º–æ—â—å—é TON-–∞–¥—Ä–µ—Å–∞ –Ω–∏–∂–µ:</i>\n\n"
            "<code>{wallet}</code>\n\n"
            "<b><emoji document_id=5217705010539812022>‚ò∫Ô∏è</emoji> <a href='{crypto_link}'>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –º–æ–π CryptoBot</a></b>\n\n"
            "<b><emoji document_id=5235575317191474172>üöÄ</emoji> <a href='{xrocket_link}'>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –º–æ–π xRocket</a></b>"
        )
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "wallet",
                "—É–∫–∞–∂–∏ —Å–≤–æ–π TON-–∞–¥—Ä–µ—Å –≤ –∫–æ–Ω—Ñ–∏–≥–µ (–∫–æ–º–∞–Ω–¥–∞ - .cfg sn_wallet)",
                lambda: self.strings("config_wallet")
            ),
            loader.ConfigValue(
                "crypto_link",
                "https://example.com",
                lambda: self.strings("config_crypto_link")
            ),
            loader.ConfigValue(
                "xrocket_link",
                "https://example.com",
                lambda: self.strings("config_xrocket_link")
            )
        )

    def _validate_config(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
        wallet = self.config["wallet"]
        crypto_link = self.config["crypto_link"]
        xrocket_link = self.config["xrocket_link"]
        return all([wallet, crypto_link, xrocket_link])

    async def wcmd(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–≤."""
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if not self._validate_config():
            await message.edit(self.strings("error_missing_config"))
            return

        wallet = self.config["wallet"]
        crypto_link = self.config["crypto_link"]
        xrocket_link = self.config["xrocket_link"]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º
        welcome_message = self.strings("welcome_message").format(
            wallet=wallet,
            crypto_link=crypto_link,
            xrocket_link=xrocket_link
        )

        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ UTF-8 –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ç–µ–∫—Å—Ç–æ–º
        welcome_message_utf8 = welcome_message.encode('utf-8').decode('utf-8')

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            await message.edit(welcome_message_utf8)
        except Exception:
            await message.edit(self.strings("error_sending_message"))
