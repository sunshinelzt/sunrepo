# meta developer: @sunshinelzt
# meta name: PromoClaimer
# meta desc: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è @StableWaifuBot

import logging
import re
from telethon.errors import AlreadyInConversationError
from telethon.tl.types import Message
from .. import loader, utils

logger = logging.getLogger('PromoClaimer')

@loader.tds
class PromoClaimerMod(loader.Module):
    """Automatically claim https://t.me/StableWaifuBot promo from any chat"""
    strings = {
        "name": "PromoClaimer",
        "claimed_promo": "[PromoClaimer] üëå –Ø —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promo} –Ω–∞ {amount} —Ç–æ–∫–µ–Ω(-–æ–≤)!",
        "error_watcher": "[PromoClaimer] ‚õîÔ∏è –í–æ –≤—Ä–µ–º—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n{e}",
        "invalid_promo": "[PromoClaimer] üò¢ –ü—Ä–æ–º–æ–∫–æ–¥ {promo} –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –ª–∏–±–æ —É–∂–µ –∏—Å—Ç–µ–∫!",
        "already_claimed": "[PromoClaimer] üò¢ –ü—Ä–æ–º–æ–∫–æ–¥ {promo} —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
        "config_changed": "[PromoClaimer] ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã: {key} = {value}",
        "logging_disabled": "[PromoClaimer] üõë –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ.",
        "logging_enabled": "[PromoClaimer] ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ.",
        "_cls_doc": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∏—Ä–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è https://t.me/StableWaifuBot",
    }

    strings_ru = {
        "claimed_promo": "[PromoClaimer] üëå –Ø —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promo} –Ω–∞ {amount} —Ç–æ–∫–µ–Ω(-–æ–≤)!",
        "error_watcher": "[PromoClaimer] ‚õîÔ∏è –í–æ –≤—Ä–µ–º—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n{e}",
        "invalid_promo": "[PromoClaimer] üò¢ –ü—Ä–æ–º–æ–∫–æ–¥ {promo} –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –ª–∏–±–æ —É–∂–µ –∏—Å—Ç–µ–∫!",
        "already_claimed": "[PromoClaimer] üò¢ –ü—Ä–æ–º–æ–∫–æ–¥ {promo} —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!",
        "config_changed": "[PromoClaimer] ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã: {key} = {value}",
        "logging_disabled": "[PromoClaimer] üõë –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ.",
        "logging_enabled": "[PromoClaimer] ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ.",
        "_cls_doc": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–∏—Ä–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è https://t.me/StableWaifuBot",
    }

    def __init__(self):
        self.config = {
            "enabled": True,  # –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
            "processed": [],  # –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
            "max_claims_per_hour": 10,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤ —á–∞—Å
            "logging": True,  # –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        }

    def _update_logging(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        if self.config["logging"]:
            logger.setLevel(logging.INFO)
        else:
            logger.setLevel(logging.CRITICAL)

    @loader.command(ru_doc='| –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤')
    async def wpromo(self, message: Message):
        """| –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤"""
        if self.config["enabled"]:
            self.config["enabled"] = False
            await utils.answer(message, "[PromoClaimer] ‚õîÔ∏è –ê–≤—Ç–æ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω–∞!")
        else:
            self.config["enabled"] = True
            await utils.answer(message, "[PromoClaimer] ‚úÖ –ê–≤—Ç–æ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤–∫–ª—é—á–µ–Ω–∞!")

    @loader.command(ru_doc='| –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –≤ —á–∞—Å')
    async def setmaxclaims(self, message: Message):
        """| –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –≤ —á–∞—Å"""
        try:
            value = int(message.text.split()[1])
            self.config["max_claims_per_hour"] = value
            await utils.answer(message, self.strings["config_changed"].format(key="max_claims_per_hour", value=value))
        except (IndexError, ValueError):
            await utils.answer(message, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–π.")

    @loader.command(ru_doc='| –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
    async def showconfig(self, message: Message):
        """| –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        config_info = "\n".join([f"{key}: {value}" for key, value in self.config.items()])
        await utils.answer(message, f"–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n{config_info}")

    @loader.command(ru_doc='| –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ')
    async def togglelogging(self, message: Message):
        """| –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤—ã–∫–ª—é—á–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
        if self.config["logging"]:
            self.config["logging"] = False
            self._update_logging()
            await utils.answer(message, self.strings["logging_disabled"])
        else:
            self.config["logging"] = True
            self._update_logging()
            await utils.answer(message, self.strings["logging_enabled"])

    @loader.watcher()
    async def watcher(self, message: Message):
        try:
            if not self.config["enabled"]:
                return

            # –ò—â–µ–º –ø—Ä–æ–º–æ–∫–æ–¥—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
            pattern = r'https://t\.me/StableWaifuBot\?start=promo_(\w+)'
            matches = re.findall(pattern, message.text)

            for match in matches:
                promo = 'promo_' + match
                if promo in self.config["processed"]:
                    continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω

                if len(self.config["processed"]) >= self.config["max_claims_per_hour"]:
                    logger.info(f"‚ùå –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ø—Ä–µ–¥–µ–ª –∞–∫—Ç–∏–≤–∞—Ü–∏–π –≤ —á–∞—Å ({self.config['max_claims_per_hour']})")
                    return

                async with self.client.conversation('@StableWaifuBot') as conv:
                    msg = await conv.send_message(f'/start {promo}')
                    response = await conv.get_response()

                    await conv.mark_read()
                    await msg.delete()
                    await response.delete()

                # –ï—Å–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
                if response.text == 'ü•≤ –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ —É–∂–µ –∏—Å—Ç—ë–∫!':
                    logger.info(self.strings("invalid_promo").format(promo=promo))
                # –ï—Å–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
                elif response.text == '‚ùå –≠—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–≤–µ—Ä—å –≤—ã—à–µ!':
                    logger.info(self.strings('already_claimed').format(promo=promo))
                else:
                    # –ï—Å–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
                    amount = response.text.split('(+')[1]
                    logger.info(self.strings('claimed_promo').format(promo=promo, amount=amount))

                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö
                self.config["processed"].append(promo)

        except Exception as e:
            if self.config["logging"]:
                logger.error(self.strings['error_watcher'].format(e=str(e)))
