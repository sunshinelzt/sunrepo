import io
from telethon.tl.types import Message
from hikka import loader, utils

@loader.tds
class SDPicsMod(loader.Module):
    """Module to save self-destructing media (photos, videos, audios, documents, etc.)"""

    strings = {
        "name": "SDPics",
        "usage": "üö´ <b>Please, reply to self-destructing media (photo, video, audio, document, etc.)</b>",
    }

    strings_ru = {
        "usage": "üö´ <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å –Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, –¥–æ–∫—É–º–µ–Ω—Ç –∏ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –º–µ–¥–∏–∞</b>",
        "_cls_doc": "–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏—Ö—Å—è –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã)",
        "_cmd_doc_s": "<–†–µ–ø–ª–∞–π –Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è –º–µ–¥–∏–∞>",
    }

    async def scmd(self, message: Message):
        """<reply to self-destructing media>"""
        reply = await message.get_reply_message()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–¥–∏–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –æ–Ω–æ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è
        if not reply or not reply.media:
            await utils.answer(message, self.strings("usage"))
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (TTL) –∏–ª–∏ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ (—Ñ–ª–∞–≥)
        if reply.media.ttl_seconds or reply.media.flags & 8:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–¥–∏–∞
            file = io.BytesIO(await reply.download_media(bytes))
            file.name = reply.file.name
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å–µ–±–µ
            await self._client.send_file("me", file)
