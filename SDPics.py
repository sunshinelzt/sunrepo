import io
from telethon.tl.types import Message
from hikka import loader


@loader.tds
class SDPicsMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏—Ö—Å—è –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –¥—Ä—É–≥–∏–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ —Ñ–∞–π–ª—ã)"""

    strings = {
        "name": "SDPics",  # –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è
        "description": "–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏–µ—Å—è –º–µ–¥–∏–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã.",
        "usage": "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏–µ—Å—è –º–µ–¥–∏–∞ (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã).",
    }

    async def scmd(self, message: Message):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏—Ö—Å—è –º–µ–¥–∏–∞"""
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª —Å–¥–µ–ª–∞–Ω –æ—Ç–≤–µ—Ç
        reply = await message.get_reply_message()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–¥–∏–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not reply or not reply.media:
            return  # –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ—Ç, –≤—ã—Ö–æ–¥–∏–º

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ttl_seconds –¥–ª—è —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏—Ö—Å—è –º–µ–¥–∏–∞
        if hasattr(reply.media, 'ttl_seconds') and reply.media.ttl_seconds > 0:
            # –≠—Ç–æ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è –º–µ–¥–∏–∞ —Å ttl_seconds (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Å —Ç–∞–π–º–µ—Ä–æ–º)
            try:
                # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞ –≤ –ø–∞–º—è—Ç—å (–Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ –¥–∏—Å–∫)
                file = io.BytesIO(await reply.download_media(bytes))
                file.name = reply.file.name  # –û—Å—Ç–∞–≤–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å–µ–±–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                await self._client.send_file("me", file)

            except Exception:
                pass  # –û—à–∏–±–∫–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥ –Ω–∞ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –º–µ–¥–∏–∞ (—Ñ–ª–∞–≥ 8) –¥–ª—è —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ
        elif hasattr(reply.media, 'flags') and reply.media.flags & 8:
            # –≠—Ç–æ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –º–µ–¥–∏–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
            try:
                # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞ –≤ –ø–∞–º—è—Ç—å (–Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ –¥–∏—Å–∫)
                file = io.BytesIO(await reply.download_media(bytes))
                file.name = reply.file.name  # –û—Å—Ç–∞–≤–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å–µ–±–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                await self._client.send_file("me", file)

            except Exception:
                pass  # –û—à–∏–±–∫–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è

        # –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ –∏–º–µ–µ—Ç ttl_seconds, –Ω–æ –æ–Ω–æ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ (–ø–æ —Ñ–ª–∞–≥—É), —Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        elif hasattr(reply.media, 'file') and hasattr(reply.media, 'mime_type'):
            # –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –º–µ–¥–∏–∞, –Ω–æ –Ω–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ ttl_seconds
            try:
                file = io.BytesIO(await reply.download_media(bytes))
                file.name = reply.file.name  # –û—Å—Ç–∞–≤–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                await self._client.send_file("me", file)
            except Exception:
                pass  # –û—à–∏–±–∫–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è

        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        await message.delete()
