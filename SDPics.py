import io
from telethon.tl.types import Message
from hikka import loader


@loader.tds
class SDPicsMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏—Ö—Å—è –∏ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã—Ö –º–µ–¥–∏–∞."""

    strings = {
        "name": "SDPics",
        "description": "–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏—Ö—Å—è –∏ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã—Ö –º–µ–¥–∏–∞.",
        "usage": "üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏–µ—Å—è –º–µ–¥–∏–∞ –∏–ª–∏ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ.",
    }

    async def scmd(self, message: Message):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–∏—Ö—Å—è –∏–ª–∏ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã—Ö –º–µ–¥–∏–∞."""

        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª —Å–¥–µ–ª–∞–Ω –æ—Ç–≤–µ—Ç
        reply = await message.get_reply_message()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–¥–∏–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not reply or not reply.media:
            return  # –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ—Ç, –≤—ã—Ö–æ–¥–∏–º

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è –º–µ–¥–∏–∞ —Å ttl_seconds
        if hasattr(reply.media, 'ttl_seconds') and reply.media.ttl_seconds > 0:
            try:
                # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞ –≤ –ø–∞–º—è—Ç—å
                file = io.BytesIO(await reply.download_media(bytes))
                file.name = reply.file.name  # –ò–º—è —Ñ–∞–π–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å–µ–±–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                await self._client.send_file("me", file, silent=True)

            except Exception:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ –º–µ–¥–∏–∞ (–µ—Å–ª–∏ –æ–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–¥–∏–Ω —Ä–∞–∑)
        elif hasattr(reply.media, 'flags') and reply.media.flags & 8:
            try:
                # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞ –≤ –ø–∞–º—è—Ç—å
                file = io.BytesIO(await reply.download_media(bytes))
                file.name = reply.file.name  # –ò–º—è —Ñ–∞–π–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Å–µ–±–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                await self._client.send_file("me", file, silent=True)

            except Exception:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏

        # –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–∞—é—â–µ–µ—Å—è, –Ω–æ –≤—Å—ë –µ—â—ë –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
        elif hasattr(reply.media, 'file') and hasattr(reply.media, 'mime_type'):
            try:
                # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞ –≤ –ø–∞–º—è—Ç—å
                file = io.BytesIO(await reply.download_media(bytes))
                file.name = reply.file.name  # –ò–º—è —Ñ–∞–π–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
                await self._client.send_file("me", file, silent=True)
            except Exception:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏

        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–ª–µ–¥–æ–≤
        await message.delete()
